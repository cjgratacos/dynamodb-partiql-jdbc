name: Test

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_call:
    # This allows the workflow to be called from other workflows

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=${{ github.workspace }}/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Make Maven Wrapper executable
      run: chmod +x mvnw

    - name: Clear AWS environment variables for unit tests
      run: |
        # Unset AWS environment variables to ensure validation tests work correctly
        unset AWS_ACCESS_KEY_ID
        unset AWS_SECRET_ACCESS_KEY  
        unset AWS_DEFAULT_REGION
        echo "AWS environment variables cleared for unit tests"
        
    - name: Run unit tests
      run: |
        # Run unit tests without AWS environment variables
        # Exclude all integration tests including nested classes
        unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION
        ./mvnw -B test -Dtest="!*IntegrationTest*,!*Integration" -Dmaven.javadoc.skip=true

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Unit Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Make Maven Wrapper executable
      run: chmod +x mvnw

    # Ensure Docker daemon is available for Testcontainers
    - name: Start Docker daemon
      run: |
        sudo systemctl start docker
        docker info

    - name: Run integration tests with Testcontainers
      run: ./mvnw -B test -Dtest="*IntegrationTest*,*Integration" -Dmaven.javadoc.skip=true
      env:
        # Testcontainers configuration
        TESTCONTAINERS_RYUK_DISABLED: true
        TESTCONTAINERS_CHECKS_DISABLE: true
        # AWS credentials for tests
        AWS_ACCESS_KEY_ID: fakeMyKeyId
        AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey
        AWS_DEFAULT_REGION: us-east-1

    - name: Generate integration test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Integration Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    permissions:
      contents: read
      checks: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Make Maven Wrapper executable
      run: chmod +x mvnw

    # Ensure Docker daemon is available for Testcontainers
    - name: Start Docker daemon
      run: |
        sudo systemctl start docker
        docker info

    - name: Run all tests with coverage (excluding performance tests)
      run: ./mvnw -B verify -Dtest="!*PerformanceTest" -Dmaven.javadoc.skip=true
      env:
        # Testcontainers configuration
        TESTCONTAINERS_RYUK_DISABLED: true
        TESTCONTAINERS_CHECKS_DISABLE: true
        # AWS credentials for tests
        AWS_ACCESS_KEY_ID: fakeMyKeyId
        AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey
        AWS_DEFAULT_REGION: us-east-1

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload JaCoCo coverage to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-coverage-report
        path: target/site/jacoco/
        retention-days: 30

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, code-coverage]
    if: always()
    permissions:
      contents: read
      statuses: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Make Maven Wrapper executable
      run: chmod +x mvnw

    - name: Run quality checks
      run: |
        ./mvnw -B spotless:check
        ./mvnw -B compile
        ./mvnw -B javadoc:javadoc

    - name: Check test results
      run: |
        if [[ "${{ needs.unit-tests.result }}" == "failure" || "${{ needs.integration-tests.result }}" == "failure" ]]; then
          echo "Tests failed - quality gate not passed"
          exit 1
        fi
        echo "Quality gate passed"

    - name: Update commit status
      if: always()
      uses: ouzi-dev/commit-status-updater@v2
      with:
        name: "Quality Gate"
        status: "${{ job.status }}"
        description: "Code quality and test results"